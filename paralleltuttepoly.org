#+title: Parallel Computation of the Tutte Polynomial
#+subtitle: 15-418: Project #71
#+author: Akira Kyle
#+date: April 18, 2018
#+email: akyle@cmu.edu
#+options: toc:nil email:t
#+latex_header_extra: \pagestyle{fancy}
#+latex_header_extra: \fancyhead[R]{Akira Kyle}
#+latex_header_extra: \fancyhead[L]{15-418}
#+latex_header_extra: \fancyhead[C]{Parallel Computation of the Tutte Polynomial}
#+latex_header_extra: \fancyfoot[C]{\thepage}

* Links
** Tutte background
[[https://en.wikipedia.org/wiki/Tutte_polynomial]]
Brendan McKay Nauty and Traces [[http://pallini.di.uniroma1.it/]]
Haggard C++ tuttepoly code [[http://homepages.ecs.vuw.ac.nz/~djp/tutte/]]
Mathematica tutte polynomial function [[http://reference.wolfram.com/language/ref/TuttePolynomial.html]]
Monagan maple tutte polynomial code [[http://www.cecm.sfu.ca/~mmonagan/tutte/]]
Vertex-exponential time tutte polynomial [[https://github.com/thorehusfeldt/tutte_bhkk]]
Blog post using tutte_bhkk in python [[http://mhenderson.net/page3/]]
** Five-flow
https://symomega.wordpress.com/2010/06/13/roots-of-flow-polynomials-and-welshs-conjecture/

** Fortran
http://www.featflow.de/en/software/featflow2/tutorial/tutorial_lang.html
https://en.wikibooks.org/wiki/Fortran
http://www.cs.rpi.edu/~szymansk/OOF90/bugs.html
http://kitchingroup.cheme.cmu.edu/blog/2014/02/04/Literate-programming-example-with-Fortran-and-org-mode/

** Chain decomposition
https://en.wikipedia.org/wiki/Bridge_(graph_theory)#Bridge-Finding_with_Chain_Decompositions
** Nauty
http://mailman.anu.edu.au/pipermail/nauty/2004-February/000121.html
http://mailman.anu.edu.au/pipermail/nauty/2004-April/000166.html


* Nauty info

#+begin_example
$ ./nautest 
NAUTYVERSION=2.6 (64 bits)  NAUTYVERSIONID=26040  HAVE_TLS=0
MAXN=0  MAXM=0  WORDSIZE=64  NAUTY_INFINITY=2000000002
sizes: short=2 int=4 long=8 double=8 boolean=4 setword=8
CLZ=1,1,1  POPCNT=1,1,1;0,0
LONG_LONG_COUNTERS=0  COUNTER_FMT=%lu
defined: __STDC__ SETWORD_LONG
DOPROMPT(stdin)=1 DOPROMPT(stdout)=1
CPUTIME = 0.000000
INITSEED: seed=416931912
#+end_example


* setup

#+begin_src bash :dir ~/class/parallel/project :results raw drawer
rsync -azP --no-perms ~/class/parallel/project/nauty26r10 latedays:
rsync -azP --no-perms ~/class/parallel/project/tuttepoly-v0.9.18 latedays:
#+end_src

#+begin_src bash :dir /ssh:latedays:nauty26r10 :results raw drawer
./configure
make
#+end_src

#+begin_src bash :dir /ssh:latedays:tuttepoly-v0.9.18 :results raw drawer
./configure CXXFLAGS='-g -O2 -std=c++11'
make
#+end_src

#+begin_src bash :dir /ssh:latedays:paralleltuttepoly :results raw drawer
for i in `seq 10 32`; do
    sed -e 's/,/\n/g' -e 's/--/:/g' -e '1i\n='$i' g' -e '$a\.\nT' \
        hprtutte/examples/edge$i | nauty/dreadnaut > graphs/hpr/edge$i.dre
done
#+end_src

#+RESULTS:
:RESULTS:
:END:

* onetest
  :PROPERTIES:
  :header-args: :dir /ssh:latedays:paralleltuttepoly :results raw drawer
  :END:
#   :header-args: :session latedays :results raw drawer

#+name: test_fns
#+begin_src bash :tangle regress.sh
function mytutte {
    ./tutte
}
function mpitutte {
    mpirun -n $1 ./tutte-mpi -s$2
}
function hprtutte() {
    gtoHPRg | hprtutte/tutte/tutte --stdin
}
function gtoHPRg() {
    nauty/showg -qe | sed -e '2!d' -e 's/  /,/g' -e 's/ /--/g'
}
function gengtest() {
    nauty/geng -q $1 | sed $2'!d'
}
function dretest() {
    nauty/dretog -q graphs/$1
}
function dotviz() {
    nauty/showg -d | nauty/dretodot | dot -Tpdf -o output/viz/$1  2> /dev/null
# echo $graphdot | dot2tex -f tikz > $fname.tex
# pdflatex $fname.tex
}
function multigengtest() {
    mkdir -p output/geng
    for i in `seq 2 $2`; do
#        gengtest $1 $i | dotviz geng-$1-$i.pdf
        gengtest $1 $i | mytutte > output/geng/mytutte-$1-$i.out
        gengtest $1 $i | hprtutte > output/geng/hprtutte-$1-$i.out
        ./polyDiff.py $1 output/geng/mytutte-$1-$i.out output/geng/hprtutte-$1-$i.out
    done
}
function mpimultigengtest() {
    mkdir -p output/geng
    for i in `seq 2 $2`; do
        gengtest $1 $i | mpitutte $3 > output/geng/mytutte-$1-$i.out
        gengtest $1 $i | hprtutte > output/geng/hprtutte-$1-$i.out
        ./polyDiff.py $1 output/geng/mytutte-$1-$i.out output/geng/hprtutte-$1-$i.out
    done
}
function multidretest() {
    mkdir -p output/$1
    for i in $( ls graphs/$1 ); do
#        dretest $1/$i | dotviz dre-$1-$i.pdf
        dretest $1/$i | mytutte > output/$1/mytutte-$i.out
        dretest $1/$i | hprtutte > output/$1/hprtutte-$i.out
        n=$( cat graphs/$1/$i | grep -o -E 'n=[0-9]+' | sed 's/[^0-9]*//g' )
        ./polyDiff.py $n output/'$1'/mytutte-$i.out output/'$1'/hprtutte-$i.out
    done
}
function regress() {
    multigengtest 2 2
    multigengtest 3 4
    multigengtest 4 11
    multigengtest 5 34
    multigengtest 6 156
    #multigengtest 7 1044
    #multidretest test
}
function timing3() {
    echo "for i in {4..35..1}; do nauty/geng -q 9 i:((i+1)) | sed '1!d' | mytutte | sed '2!d'"
    for i in {4..35..2}; do
    nauty/geng -q 9 $i:$((i+1)) | sed '1!d' | mytutte | sed '2!d'
    done
}
function mpitiming1() {
    echo "for i in 4 8 16 32; do dretest hpr/edge15.dre | mpitutte i ((i * 3 / 2)) | sed '2!d'"
    for i in 4 8 16 32; do
    dretest hpr/edge15.dre | mpitutte $i $(($i * 3 / 2)) | sed '2!d'
    done
}
function mpitiming2() {
    echo "for i in {2..32}; do dretest hpr/edge13.dre | mpitutte 8 $i | sed '2!d'"
    for i in {2..32}; do
        dretest hpr/edge13.dre | mpitutte 8 $i | sed '2!d'
    done
}
function mpitiming3() {
    echo "for i in {4..35..2}; do nauty/geng -q 9 i:((i+1)) | sed '1!d' | mpitutte 8 12 | sed '2!d'"
    for i in {4..35..2}; do
    nauty/geng -q 9 $i:$((i+1)) | sed '1!d' | mpitutte 8 12 | sed '2!d'
    done
}
#+end_src

#+RESULTS: test_fns
:RESULTS:
:END:

#+begin_src bash :noweb yes :tangle seqtiming.sh
#!/bin/bash
{{{test_fns}}}
cd $PBS_O_WORKDIR
timing3
#+end_src

#+begin_src bash :noweb yes :tangle timing1.sh
#!/bin/bash
{{{test_fns}}}
cd $PBS_O_WORKDIR
mpitiming1
#+end_src

#+begin_src bash :noweb yes :tangle timing2.sh
#!/bin/bash
{{{test_fns}}}
cd $PBS_O_WORKDIR
mpitiming2
#+end_src

#+begin_src bash :noweb yes :tangle timing3.sh
#!/bin/bash
{{{test_fns}}}
cd $PBS_O_WORKDIR
mpitiming3
#+end_src

#+RESULTS:
:RESULTS:
:END:

#+begin_src bash :noweb yes
{{{test_fns}}}
function onetest() {
    #dretest hpr/edge14.dre
    #gengtest 7 773
    gengtest 5 10
}
make
#onetest | dotviz graph.pdf
#onetest | mytutte #> mytutte.out
#onetest | mpitutte 2
timing
echo
#onetest | hprtutte #> hprtutte.out
#./polyDiff.py 7 mytutte.out hprtutte.out
#+end_src

#+RESULTS:
:RESULTS:
make: Nothing to be done for `all'.
dfs tutte body:
T = 1*x^4 :
Time : 0.00

G[1] := {0--3,0--4,1--4,2--4}
TP[1] := 1*x^4 :
:END:
#+begin_src bash :noweb yes
{{{test_fns}}}
#multigengtest 4 8
#make
#gengtest 3 1 | mytutte 12
#regress
mpimultigengtest 5 34 4
#+end_src

#+RESULTS:
:RESULTS:
:END:

* Results

** old
#+begin_example
for i in {2 4 8 16 32}; do
dretest hpr/edge13.dre | mpitutte $i 64 | sed '2!d'
Time : 2.93
Time : 2.94
Time : 3.22
Time : 4.38
Time : 13.49
#+end_example

#+begin_example
for i in {2 4 8 16 32}; do
dretest hpr/edge13.dre | mpitutte $i 32 | sed '2!d'
Time : 2.94
Time : 3.00
Time : 3.21
Time : 5.49
Time : 11.75
#+end_example

#+begin_example
timing procs: {4 8 16 32}, edge14.dre
Time : 16.02
Time : 17.55
Time : 26.69
Time : 65.27
#+end_example

#+begin_example
timing edges: {2..45..4} geng 10
Time : 0.00
Time : 0.00
Time : 0.00
Time : 0.00
Time : 0.04
Time : 0.26
Time : 1.49
Time : 5.32
Time : 27.78
Time : 267.37
#+end_example
*** timing 1

timing procs: 4 8 16 32, edge14.dre
Time : 16.34
Time : 17.56
Time : 18.45
Time : 61.18
timing procs: 4 8 16 32, edge14.dre, s64
Time : 15.95
Time : 17.50
Time : 29.49
Time : 66.09
timing procs: 4 8 16 32, edge15.dre, s64
Time : 43.15
Time : 48.04
Time : 135.89
Time : 173.12

*** seqtiming

seq timing: {4..44..4}, n=9
Time : 0.00
Time : 0.00
Time : 0.00
Time : 0.00
Time : 0.03
Time : 0.18
Time : 0.71
Time : 2.64
Time : 7.70
seq timing: {4..44..4}, geng 10
Time : 0.00
Time : 0.00
Time : 0.00
Time : 0.00
Time : 0.03
Time : 0.21
Time : 1.13
Time : 4.82
Time : 17.35
Time : 51.98
Time : 140.41

*** timing 2

timing split: 10 20 30, edge13.dre
Time : 2.99
Time : 3.00
timing split: 10 20 30 40 50 60 70 80 90, edge13.dre, n4
Time : 2.94
Time : 2.95
Time : 2.97
Time : 2.96
Time : 2.95
Time : 2.97
Time : 3.00
Time : 2.95



** new

for i in 4 8 16 32; do dretest hpr/edge15.dre | mpitutte i ((i * 3 / 2)) | sed '2!d'
Time : 19.72
Time : 20.97
Time : 70.60
Time : 164.53

for i in {2..32}; do dretest hpr/edge13.dre | mpitutte 8  | sed '2!d'
Time : 1.45
Time : 1.48
Time : 1.44
Time : 1.46
Time : 1.45
Time : 1.47
Time : 1.45
Time : 1.43
Time : 1.45
Time : 1.45
Time : 1.43
Time : 1.43
Time : 3.26
Time : 3.21
Time : 3.24
Time : 3.21
Time : 3.22
Time : 3.22
Time : 3.22
Time : 3.21
Time : 3.22
Time : 3.21
Time : 3.21
Time : 3.30
Time : 3.21
Time : 3.23
Time : 3.22
Time : 3.26
Time : 3.21
Time : 3.22
Time : 3.22

for i in {4..35..2}; do nauty/geng -q 9 i:((i+1)) | sed '1!d' | mpitutte 8 12 | sed '2!d'
Time : 0.00
Time : 0.00
Time : 0.00
Time : 0.00
Time : 0.00
Time : 0.01
Time : 0.02
Time : 0.04
Time : 0.11
Time : 0.31
Time : 0.68
Time : 1.27
Time : 2.22
Time : 3.40
Time : 6.05
Time : 11.23


* local variables
# Local Variables:
# org-babel-noweb-wrap-start: "{{{"
# org-babel-noweb-wrap-end: "}}}"
# End:
